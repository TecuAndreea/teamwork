// <auto-generated />
using System;
using AsociatiaDeTarani.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsociatiaDeTarani.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210921085020_PhotosAddedCorectlyAgain")]
    partial class PhotosAddedCorectlyAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsociatiaDeTarani.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlacementDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("TotalPriceProducts")
                        .HasColumnType("float");

                    b.HasKey("OrderProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.Producer", b =>
                {
                    b.Property<int>("ProducerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DeliveryCost")
                        .HasColumnType("float");

                    b.Property<double>("MinimumOrder")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ProducerId");

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            ProducerId = 1,
                            DeliveryCost = 15.0,
                            MinimumOrder = 200.0,
                            Name = "Ionescu Mihai",
                            PhoneNumber = "0712345678"
                        },
                        new
                        {
                            ProducerId = 2,
                            DeliveryCost = 12.0,
                            MinimumOrder = 150.0,
                            Name = "Petre Vasile",
                            PhoneNumber = "0745678123"
                        },
                        new
                        {
                            ProducerId = 4,
                            DeliveryCost = 13.0,
                            MinimumOrder = 120.0,
                            Name = "Mihai Alexandru",
                            PhoneNumber = "0712345622"
                        },
                        new
                        {
                            ProducerId = 5,
                            DeliveryCost = 15.0,
                            MinimumOrder = 100.0,
                            Name = "Costea Andrei",
                            PhoneNumber = "0798754321"
                        },
                        new
                        {
                            ProducerId = 6,
                            DeliveryCost = 17.0,
                            MinimumOrder = 180.0,
                            Name = "Miron Claudiu",
                            PhoneNumber = "0755533322"
                        },
                        new
                        {
                            ProducerId = 7,
                            DeliveryCost = 19.0,
                            MinimumOrder = 150.0,
                            Name = "Soare Anisoara",
                            PhoneNumber = "0711223344"
                        });
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvailableStock")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AvailableStock = 100.0,
                            Name = "Rosii Bio",
                            PhotoUrl = "/Images/IonescuMihai/RosiiBio.jpg",
                            Price = 6.0,
                            ProducerId = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            ProductId = 2,
                            AvailableStock = 80.0,
                            Name = "Castraveti Bio",
                            PhotoUrl = "/Images/IonescuMihai/CastravetiBio.jpg",
                            Price = 3.0,
                            ProducerId = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            ProductId = 5,
                            AvailableStock = 200.0,
                            Name = "Morcovi Bio",
                            PhotoUrl = "/Images/IonescuMihai/morcovi.jpg",
                            Price = 2.0,
                            ProducerId = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            ProductId = 6,
                            AvailableStock = 70.0,
                            Name = "Ridichi Bio",
                            PhotoUrl = "/Images/IonescuMihai/ridichi.jpg",
                            Price = 10.0,
                            ProducerId = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            ProductId = 3,
                            AvailableStock = 200.0,
                            Name = "Varza Bio",
                            PhotoUrl = "/Images/PetreVasile/VarzaBio.jpg",
                            Price = 50.0,
                            ProducerId = 2,
                            Weight = 10.0
                        },
                        new
                        {
                            ProductId = 7,
                            AvailableStock = 100.0,
                            Name = "Salata",
                            PhotoUrl = "/Images/PetreVasile/salata1.jpg",
                            Price = 5.0,
                            ProducerId = 2,
                            Weight = 1.0
                        },
                        new
                        {
                            ProductId = 8,
                            AvailableStock = 200.0,
                            Name = "Ceapa",
                            PhotoUrl = "/Images/PetreVasile/ceapa1.jpg",
                            Price = 50.0,
                            ProducerId = 2,
                            Weight = 25.0
                        },
                        new
                        {
                            ProductId = 9,
                            AvailableStock = 1500.0,
                            Name = "Cartofi",
                            PhotoUrl = "/Images/PetreVasile/cartofi.jpg",
                            Price = 50.0,
                            ProducerId = 2,
                            Weight = 50.0
                        },
                        new
                        {
                            ProductId = 10,
                            AvailableStock = 200.0,
                            Name = "Ceapa",
                            PhotoUrl = "/Images/PetreVasile/ceapa1.jpg",
                            Price = 50.0,
                            ProducerId = 4,
                            Weight = 25.0
                        },
                        new
                        {
                            ProductId = 11,
                            AvailableStock = 200.0,
                            Name = "Castraveti Bio",
                            PhotoUrl = "/Images/MihaiAlexandru/castravetiBio.jpg",
                            Price = 35.0,
                            ProducerId = 4,
                            Weight = 10.0
                        },
                        new
                        {
                            ProductId = 12,
                            AvailableStock = 60.0,
                            Name = "Castraveti Bio",
                            PhotoUrl = "/Images/MihaiAlexandru/salata2.jpg",
                            Price = 10.0,
                            ProducerId = 4,
                            Weight = 2.0
                        },
                        new
                        {
                            ProductId = 13,
                            AvailableStock = 300.0,
                            Name = "Ridichi Bio",
                            PhotoUrl = "/Images/MihaiAlexandru/ridichi1.jpg",
                            Price = 100.0,
                            ProducerId = 4,
                            Weight = 10.0
                        },
                        new
                        {
                            ProductId = 14,
                            AvailableStock = 175.0,
                            Name = "Morcovi Bio",
                            PhotoUrl = "/Images/MihaiAlexandru/morcovi1.jpg",
                            Price = 30.0,
                            ProducerId = 4,
                            Weight = 10.0
                        },
                        new
                        {
                            ProductId = 15,
                            AvailableStock = 500.0,
                            Name = "Cartofi Rosii",
                            PhotoUrl = "/Images/CosteaAndrei/cartofiRosii.jpg",
                            Price = 50.0,
                            ProducerId = 5,
                            Weight = 25.0
                        },
                        new
                        {
                            ProductId = 16,
                            AvailableStock = 1000.0,
                            Name = "Cartofi",
                            PhotoUrl = "/Images/CosteaAndrei/cartofi2.jpg",
                            Price = 25.0,
                            ProducerId = 5,
                            Weight = 25.0
                        },
                        new
                        {
                            ProductId = 17,
                            AvailableStock = 600.0,
                            Name = "Ceapa",
                            PhotoUrl = "/Images/CosteaAndrei/ceapa.jpg",
                            Price = 45.0,
                            ProducerId = 5,
                            Weight = 20.0
                        },
                        new
                        {
                            ProductId = 18,
                            AvailableStock = 300.0,
                            Name = "Ceapa Rosie",
                            PhotoUrl = "/Images/CosteaAndrei/ceapaRosie.jpg",
                            Price = 60.0,
                            ProducerId = 5,
                            Weight = 25.0
                        },
                        new
                        {
                            ProductId = 19,
                            AvailableStock = 300.0,
                            Name = "Castraveti",
                            PhotoUrl = "/Images/MironClaudiu/castraveti.jpg",
                            Price = 40.0,
                            ProducerId = 6,
                            Weight = 10.0
                        },
                        new
                        {
                            ProductId = 20,
                            AvailableStock = 400.0,
                            Name = "ceapaRosie1",
                            PhotoUrl = "/Images/MironClaudiu/ceapaRosie1.jpg",
                            Price = 30.0,
                            ProducerId = 6,
                            Weight = 10.0
                        },
                        new
                        {
                            ProductId = 21,
                            AvailableStock = 300.0,
                            Name = "Mere",
                            PhotoUrl = "/Images/MironClaudiu/mere1.jpg",
                            Price = 20.0,
                            ProducerId = 6,
                            Weight = 5.0
                        },
                        new
                        {
                            ProductId = 22,
                            AvailableStock = 300.0,
                            Name = "Ridichi",
                            PhotoUrl = "/Images/MironClaudiu/ridichi.jpg",
                            Price = 25.0,
                            ProducerId = 6,
                            Weight = 3.0
                        },
                        new
                        {
                            ProductId = 23,
                            AvailableStock = 1200.0,
                            Name = "Cartofi",
                            PhotoUrl = "/Images/SoareAnisoara/cartofi1.jpg",
                            Price = 75.0,
                            ProducerId = 7,
                            Weight = 75.0
                        },
                        new
                        {
                            ProductId = 24,
                            AvailableStock = 700.0,
                            Name = "Ceapa",
                            PhotoUrl = "/Images/SoareAnisoara/ceapa2.jpg",
                            Price = 75.0,
                            ProducerId = 7,
                            Weight = 30.0
                        },
                        new
                        {
                            ProductId = 25,
                            AvailableStock = 200.0,
                            Name = "Mere",
                            PhotoUrl = "/Images/SoareAnisoara/mere2.jpg",
                            Price = 20.0,
                            ProducerId = 7,
                            Weight = 5.0
                        },
                        new
                        {
                            ProductId = 26,
                            AvailableStock = 200.0,
                            Name = "Morcovi",
                            PhotoUrl = "/Images/SoareAnisoara/morcovi2.jpg",
                            Price = 15.0,
                            ProducerId = 7,
                            Weight = 10.0
                        });
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.Order", b =>
                {
                    b.HasOne("AsociatiaDeTarani.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.OrderProduct", b =>
                {
                    b.HasOne("AsociatiaDeTarani.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsociatiaDeTarani.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.Product", b =>
                {
                    b.HasOne("AsociatiaDeTarani.Models.Producer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("AsociatiaDeTarani.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
